import { PrismaService } from '../prisma/prisma.service';
import { LessonProgressService } from '../lesson-progress/lesson-progress.service';
export declare class AccessGrantsService {
    private prisma;
    private lessonProgressService;
    constructor(prisma: PrismaService, lessonProgressService: LessonProgressService);
    create(createAccessGrantDto: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        userId: string;
        courseId: string;
        startAt: Date;
        endAt: Date | null;
        orderId: string | null;
    }>;
    findAll(): Promise<({
        user: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isActive: boolean;
            email: string;
            firstName: string;
            lastName: string;
            password: string;
            role: import("@prisma/client").$Enums.UserRole;
            emailVerified: boolean;
            emailVerifiedAt: Date | null;
            avatar: string | null;
            phone: string | null;
            bio: string | null;
            website: string | null;
        };
        course: {
            id: string;
            title: string;
            description: string;
            duration: number;
            isPublished: boolean;
            thumbnail: string | null;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            metaTitle: string | null;
            metaDescription: string | null;
            price: import("@prisma/client/runtime/library").Decimal;
            currency: string;
            level: import("@prisma/client").$Enums.CourseLevel;
            language: string;
            instructorId: string;
            keywords: string | null;
        };
        order: {
            id: string;
            amount: import("@prisma/client/runtime/library").Decimal;
            status: import("@prisma/client").$Enums.OrderStatus;
            currency: string;
            userId: string;
            expiresAt: Date | null;
            courseId: string;
            orderNumber: string;
            invoiceNumber: string | null;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            billingInfo: import("@prisma/client/runtime/library").JsonValue | null;
            paymentIntentId: string | null;
            purchasedAt: Date;
            paymentMethod: import("@prisma/client").$Enums.PaymentMethod;
        } | null;
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        userId: string;
        courseId: string;
        startAt: Date;
        endAt: Date | null;
        orderId: string | null;
    })[]>;
    findOne(id: string): Promise<({
        user: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isActive: boolean;
            email: string;
            firstName: string;
            lastName: string;
            password: string;
            role: import("@prisma/client").$Enums.UserRole;
            emailVerified: boolean;
            emailVerifiedAt: Date | null;
            avatar: string | null;
            phone: string | null;
            bio: string | null;
            website: string | null;
        };
        course: {
            id: string;
            title: string;
            description: string;
            duration: number;
            isPublished: boolean;
            thumbnail: string | null;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            metaTitle: string | null;
            metaDescription: string | null;
            price: import("@prisma/client/runtime/library").Decimal;
            currency: string;
            level: import("@prisma/client").$Enums.CourseLevel;
            language: string;
            instructorId: string;
            keywords: string | null;
        };
        order: {
            id: string;
            amount: import("@prisma/client/runtime/library").Decimal;
            status: import("@prisma/client").$Enums.OrderStatus;
            currency: string;
            userId: string;
            expiresAt: Date | null;
            courseId: string;
            orderNumber: string;
            invoiceNumber: string | null;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            billingInfo: import("@prisma/client/runtime/library").JsonValue | null;
            paymentIntentId: string | null;
            purchasedAt: Date;
            paymentMethod: import("@prisma/client").$Enums.PaymentMethod;
        } | null;
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isActive: boolean;
        userId: string;
        courseId: string;
        startAt: Date;
        endAt: Date | null;
        orderId: string | null;
    }) | null>;
    checkLessonAccess(userId: string, lessonId: string): Promise<boolean>;
    getUserCourses(userId: string): Promise<{
        id: string;
        slug: string;
        title: string;
        description: string;
        thumbnail: string | null;
        duration: number;
        level: import("@prisma/client").$Enums.CourseLevel;
        instructor: {
            id: string;
            email: string;
            firstName: string;
            lastName: string;
        };
        progress: number;
        completedLessons: number;
        totalLessons: number;
        lastAccessed: string;
        expiresAt: Date | null;
        remainingTime: number | null;
        orderNumber: string | null;
        orderStatus: import("@prisma/client").$Enums.OrderStatus | null;
        accessGrantId: string;
        sections: ({
            lessons: {
                order: number;
                id: string;
                title: string;
                description: string | null;
                videoUrl: string | null;
                duration: number;
                sectionId: string;
                isPublished: boolean;
                videoKey: string | null;
                thumbnail: string | null;
                subtitles: import("@prisma/client/runtime/library").JsonValue | null;
                createdAt: Date;
                updatedAt: Date;
                isFree: boolean;
                resources: import("@prisma/client/runtime/library").JsonValue | null;
                videoType: string | null;
            }[];
        } & {
            order: number;
            id: string;
            title: string;
            description: string | null;
            duration: number;
            isPublished: boolean;
            createdAt: Date;
            updatedAt: Date;
            courseId: string;
            totalLessons: number;
        })[];
    }[]>;
}
